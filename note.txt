What’s left / next

- Sounds: If you can confirm the filenames in mods/base/sounds (e.g., reload.wav, jam.wav,
unjam.wav), I can wire exact keys or scan names and pick best matches.
- Crate placement: Move room placement into Lua (e.g., a Lua map/room generator), or provide a
lightweight Lua spawn_crate API.
- Projectile pool instances: If you want projectile instances as VIDs with mutable state and
modifiers (e.g., bouncy/poison/radiation), we can expand to a ProjectilePool with VID + per-instance
tags. Current approach calls Lua hooks by def type, but we can pass richer context next.
- Modifier model: We’ll integrate a unified modifier system to compute projectile effects from
player-struct, item, and gun scopes. For now, hooks exist so Lua can implement effects on hit.
- Crate variants: Add crate type per def and draw small tint or icon. Also add ammo/heal/explode
crates via on_open.
- Audio namespaces: If we want collisions avoided, stick to namespaced keys mod:name. I can add a
helper “play_any({mod1:key1, mod2:key2})” if needed.

Tell me:

- Do you want me to move crate spawning into Lua now (e.g., spawn a few near spawn or at weighted
positions)?
- Should I add per-gun jam_chance to the example guns in mods/base/scripts/content.lua and a simple
bullet projectile def?
- Confirm your actual sound filenames so I can wire plays to the right keys.
