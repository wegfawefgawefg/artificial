Next Steps (TODO)
-----------------
1) Scaffold mods/base structure [DONE]
   - Path: mods/base/
   - Files: info.toml (name, version, deps), empty subfolders: graphics/, sounds/, music/, scripts/

2) Sprite atlas + registry [IN PROGRESS]
   - Added SpriteIdRegistry (string -> int) and atlas loader stub
   - Rendering still uses debug rects (no textures yet)

3) Lua integration (mod API)
   - Load mods/*/scripts/*.lua and data.lua
   - Expose tables for entities/projectiles/tiles and callbacks (on_projectile_hit, on_step, on_spawn)
   - Resolve load order via info.toml deps (base first)

4) Projectile on-hit hook
   - Bridge C++ lambda to Lua callback with minimal metadata (owner VID, target VID, projectile type)

5) Camera + rendering polish
   - Apply camera transforms when drawing
   - Add simple zoom/pan controls mapped to inputs

6) Spawn safety
   - Eject entities spawned inside solid tiles (simple upward nudge or retry)

7) Settings persistence
   - Save input bindings and options back to .ini from in-game menu

8) Dev tooling
   - Optional ASan/UBSan preset
   - Simple logging helper

9) Hot reload [ADDED]
   - ModsManager with polling-based hot reload for assets and scripts (stub reload)
   - Rebuilds SpriteIdRegistry on graphics/ changes
   - Hooks ready for future Lua behavior reload
Lua Integration (Required)
- Add Lua 5.x required dependency in CMake; fail if missing
- Implement Lua registry loader (mods/*/scripts/*.lua)
- Expose APIs: register_powerup, register_item, register_gun, register_sprite
- Define base content in mods/base (bandage, health kit, armor plate, pistol, rifle, sprites)
- Move current C++ test spawns into Lua-driven spawn helpers and remove C++ spawns

Sprites & Rendering
- Hook sprite textures (SDL_image or custom PNG loader) and draw entities/items with debug AABB overlay
- Map entity types (player, zombie) and items (bandage, medkit, hat) to sprite names from Lua
- Scale/rotate visuals loosely; keep AABB physics authoritative

Inventory & UI
- Right panel: show gun details (damage, RPM, recoil, control, mag, ammo, heat, perks)
- Number keys: complete mapping and UI cues; remove scroll selection behavior
- Pickup prompt: show “Press F to pick up <item>” when overlapping

Gameplay & Systems
- Implement armor plate mechanic (one-hit immunity) and armor vs AP formula
- Items/powerups can modify stats and register triggers (on_damage, on_shoot, on_use) from Lua
- Enemy death drops: chance to spawn powerups/items/guns using Lua drop tables

Spawn Safety
- Ensure spawned pickups/items never land in impassable tiles; push to nearest walkable tile
- Runtime repulsion already in place; add path-to-open-tile correction if spawned in void

Polish
- Score review screen text and details; scoring placeholders
- Logging and hot-reload messages
